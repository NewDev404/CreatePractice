package com.tuapp.data.repository

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import com.google.firebase.database.*
import com.tuapp.model.Vehicle

class VehicleListRepository {

    private val databaseRef: DatabaseReference = FirebaseDatabase.getInstance().getReference("vehicles")

    fun getVehicleList(): LiveData<List<Vehicle>> {
        val vehicleListLiveData = MutableLiveData<List<Vehicle>>()

        databaseRef.addValueEventListener(object : ValueEventListener {
            override fun onDataChange(snapshot: DataSnapshot) {
                val vehicleList = mutableListOf<Vehicle>()
                for (child in snapshot.children) {
                    val vehicle = child.getValue(Vehicle::class.java)
                    vehicle?.let { vehicleList.add(it) }
                }
                vehicleListLiveData.postValue(vehicleList)
            }

            override fun onCancelled(error: DatabaseError) {
                vehicleListLiveData.postValue(emptyList()) // En caso de error
            }
        })

        return vehicleListLiveData
    }
}

OTRO

package com.tuapp.features.vehicle_list

import androidx.lifecycle.LiveData
import androidx.lifecycle.ViewModel
import com.tuapp.data.repository.VehicleListRepository
import com.tuapp.model.Vehicle

class VehicleListViewModel : ViewModel() {

    private val repository = VehicleListRepository()

    fun getVehicleList(): LiveData<List<Vehicle>> {
        return repository.getVehicleList()
    }
}

OTRO

package com.tuapp.features.vehicle_list

import android.content.Intent
import android.os.Bundle
import androidx.activity.viewModels
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import com.tuapp.databinding.ActivityVehicleListBinding
import com.tuapp.features.vehicle_details.VehicleDetailsActivity
import com.tuapp.model.Vehicle

class VehicleListActivity : AppCompatActivity() {

    private lateinit var binding: ActivityVehicleListBinding
    private val viewModel: VehicleListViewModel by viewModels()
    private lateinit var adapter: VehicleListAdapter
    private val vehicleList = mutableListOf<Vehicle>()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityVehicleListBinding.inflate(layoutInflater)
        setContentView(binding.root)

        adapter = VehicleListAdapter(vehicleList) { vehicle ->
            val intent = Intent(this, VehicleDetailsActivity::class.java)
            intent.putExtra("vehicleId", vehicle.vehicleId)
            startActivity(intent)
        }

        binding.recyclerViewVehicles.layoutManager = LinearLayoutManager(this)
        binding.recyclerViewVehicles.adapter = adapter

        // Observamos los datos
        viewModel.getVehicleList().observe(this) { list ->
            vehicleList.clear()
            vehicleList.addAll(list)
            adapter.notifyDataSetChanged()
        }
    }
}

OTRO

package com.tuapp.features.vehicle_list

import android.view.LayoutInflater
import android.view.ViewGroup
import androidx.recyclerview.widget.RecyclerView
import com.tuapp.databinding.ItemVehicleBinding
import com.tuapp.model.Vehicle

class VehicleListAdapter(
    private val vehicleList: List<Vehicle>,
    private val onItemClick: (Vehicle) -> Unit
) : RecyclerView.Adapter<VehicleListHolder>() {

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): VehicleListHolder {
        val binding = ItemVehicleBinding.inflate(LayoutInflater.from(parent.context), parent, false)
        return VehicleListHolder(binding)
    }

    override fun onBindViewHolder(holder: VehicleListHolder, position: Int) {
        val vehicle = vehicleList[position]
        holder.bind(vehicle)
        holder.itemView.setOnClickListener {
            onItemClick(vehicle)
        }
    }

    override fun getItemCount(): Int = vehicleList.size
}

OTRO

package com.tuapp.features.vehicle_list

import androidx.recyclerview.widget.RecyclerView
import com.tuapp.databinding.ItemVehicleBinding
import com.tuapp.model.Vehicle

class VehicleListHolder(
    private val binding: ItemVehicleBinding
) : RecyclerView.ViewHolder(binding.root) {

    fun bind(vehicle: Vehicle) {
        binding.textVehicleName.text = vehicle.name
        binding.textVehicleType.text = vehicle.type
        // Puedes agregar más campos si hay más atributos como marca, año, etc.
    }
}
