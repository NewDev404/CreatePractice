package com.tuapp.data.repository

import com.google.firebase.database.*
import com.tuapp.data.model.Vehicle

class VehicleRepository {

    private val databaseRef: DatabaseReference = FirebaseDatabase.getInstance().getReference("vehicles")

    fun getVehicles(onResult: (List<Vehicle>) -> Unit) {
        databaseRef.addListenerForSingleValueEvent(object : ValueEventListener {
            override fun onDataChange(snapshot: DataSnapshot) {
                val vehicleList = mutableListOf<Vehicle>()
                for (vehicleSnapshot in snapshot.children) {
                    val vehicle = vehicleSnapshot.getValue(Vehicle::class.java)
                    vehicle?.let { vehicleList.add(it) }
                }
                onResult(vehicleList)
            }

            override fun onCancelled(error: DatabaseError) {
                onResult(emptyList())
            }
        })
    }
}

Otro

package com.tuapp.features.vehicle_list

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import com.tuapp.data.model.Vehicle
import com.tuapp.data.repository.VehicleRepository

class VehicleListViewModel : ViewModel() {

    private val repository = VehicleRepository()

    private val _vehicles = MutableLiveData<List<Vehicle>>()
    val vehicles: LiveData<List<Vehicle>> = _vehicles

    fun loadVehicles() {
        repository.getVehicles { vehicleList ->
            _vehicles.value = vehicleList
        }
    }
}

Otro

package com.tuapp.features.vehicle_list

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import androidx.recyclerview.widget.RecyclerView
import com.tuapp.R
import com.tuapp.data.model.Vehicle

class VehicleAdapter(private val vehicleList: List<Vehicle>) :
    RecyclerView.Adapter<VehicleAdapter.VehicleViewHolder>() {

    inner class VehicleViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        val nameText: TextView = itemView.findViewById(R.id.text_vehicle_name)
        val plateText: TextView = itemView.findViewById(R.id.text_vehicle_plate)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): VehicleViewHolder {
        val view = LayoutInflater.from(parent.context)
            .inflate(R.layout.item_vehicle, parent, false)
        return VehicleViewHolder(view)
    }

    override fun onBindViewHolder(holder: VehicleViewHolder, position: Int) {
        val vehicle = vehicleList[position]
        holder.nameText.text = vehicle.name
        holder.plateText.text = vehicle.plateNumber

        holder.itemView.setOnClickListener {
            // AquÃ­ puedes lanzar un intent para ir a vehicleDetails
        }
    }

    override fun getItemCount(): Int = vehicleList.size
}

Otro

package com.tuapp.features.vehicle_list

import android.os.Bundle
import androidx.activity.viewModels
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import com.tuapp.databinding.ActivityVehicleListBinding

class VehicleListActivity : AppCompatActivity() {

    private lateinit var binding: ActivityVehicleListBinding
    private val viewModel: VehicleListViewModel by viewModels()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityVehicleListBinding.inflate(layoutInflater)
        setContentView(binding.root)

        binding.recyclerVehicleList.layoutManager = LinearLayoutManager(this)

        viewModel.vehicles.observe(this) { vehicleList ->
            binding.recyclerVehicleList.adapter = VehicleAdapter(vehicleList)
        }

        viewModel.loadVehicles()
    }
}
